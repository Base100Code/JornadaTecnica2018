REPOSITORY stock
CONSTANTS  begin
	SKIN_LIST_ITEM_HEADER = 1
	SKIN_LIST_ITEM_SELECTED_ROW = 2
	SKIN_LIST_ITEM_UNSELECTED_ROW = 3
	SKIN_LIST_ITEM_SCROLL_BAR = 4
	SKIN_LIST_ITEM_SEARCH_BAR = 5
	SKIN_LIST_PART_BITMAP = 1
	SKIN_LIST_PART_BORDER = 2
	SKIN_LIST_PART_TEXT = 3
	SKIN_LIST_STATUS_FOCUSED = 1
	SKIN_LIST_STATUS_NORMAL = 2
	SKIN_LIST_STATUS_DOWN = 3
end
CLASSES BEGIN
	frm is Form begin
		objects begin
			gNumRows as Integer
			InstruSelect as Char
		end
		menu MnuFiltro
		PULLDOWN
			BEGIN
				OPTION
					"Filtrar por columna"
					COMMAND FilterByColumn
			END
		INTERFACE
			POSITION 0 0 1148 587
			LABEL "Filters"
			RESIZING
			MAXIMIZE
			MINIMIZE
			SYSMENU
		BEGIN
			CONTROL ctr_caja AS BOX
				POSITION 0 0 1132 521
				FOREGROUND RGB 0 0 0
				ATTACH ALL
				NOLABEL
				NOBORDER
			BEGIN
				CONTROL AS TAB
					POSITION 10 8 1113 505
					ATTACH ALL
					BORDER DOUBLE
					NUMBER 1
						TAB LABEL "AddColumnFilter / AllowColumnHeaderFilter / ShowListFilter"
				BEGIN
					CONTROL lstStrings AS LIST
						POSITION 5 11 974 464
						ATTACH ALL
						LABEL "State|Customer  |Order date |Pay date |Status |Nº line |Cod. Item |Description|Quantity|Discount|Price|Phone"
						BORDER DOUBLE DOWN
						ICON FILE "_MBSTDBMP_"
						LISTTYPE LISTCOLS 12
						SELECTTYPE SIMPLE
						SCROLL VERTICAL HORIZONTAL
					CONTROL AS BUTTON
						POSITION 985 354 118 36
						ATTACH RIGHT BOTTOM
						LABEL "Show Filter Bar"
						COMMAND CmdFiltroStrings
					CONTROL AS BUTTON
						POSITION 985 394 118 36
						ATTACH RIGHT BOTTOM
						LABEL "Hide Filter Bar"
						COMMAND CmdCerrarFiltroStrings
					CONTROL AS BUTTON
						POSITION 985 434 118 36
						ATTACH RIGHT BOTTOM
						LABEL "ResetListFilterBar"
						COMMAND CmdResefilterStrings
					CONTROL btnResetFiltro_2 AS BUTTON
						POSITION 985 55 118 36
						ATTACH TOP RIGHT
						LABEL "ResetFilters"
					CONTROL BtnFilterY AS BUTTON
						POSITION 985 15 118 36
						ATTACH TOP RIGHT
						LABEL "Filter Status = Y"
				END
			END
			CONTROL AS BAR
				POSITION 0 521 1132 27
				FOREGROUND RGB 0 0 0
				ATTACH LEFT RIGHT BOTTOM
				BORDER ETCHED EXTRA 3
				BARTYPE STATUS
			BEGIN
				CONTROL txtMensaje AS TEXT
					POSITION 3 0 1120 19
					ATTACH ALL
					NOBORDER
					DATATYPE CHAR
			END
		END
	end
END
CODE CLASS frm BEGIN
//{{CODEBEGIN
On Open begin
    CargaLista(lstStrings, "strings");
end  


Private CargaLista ( pList as SimpleFormControl, pType as char)
    Objects Begin
       
        icon as integer default 0
        texto as char
        valor as decimal
        InstruSelectString as char
    End
Begin
    
    pList.Reset();    
    
    pList.AlternateBackColor( Rgb(242,242,242) , Rgb(255, 255, 255), 2);
    pList.SetLockColumns(1);
   
    pList.AllowColumnHeaderFilter(1, TRUE, 1000);
    pList.AllowColumnHeaderFilter(2, TRUE, 1000);
    pList.AllowColumnHeaderFilter(3, TRUE, 1000);
    pList.AllowColumnHeaderFilter(4, TRUE, 1000);
    pList.AllowColumnHeaderFilter(5, TRUE, 1000);
    pList.AllowColumnHeaderFilter(6, TRUE, 1000);    
    pList.AllowColumnHeaderFilter(7, TRUE, 1000);
    pList.AllowColumnHeaderFilter(8, TRUE, 1000);
    pList.AllowColumnHeaderFilter(9, TRUE, 1000);
    pList.AllowColumnHeaderFilter(10, TRUE, 1000);
    pList.AllowColumnHeaderFilter(11, TRUE, 1000);
    pList.AllowColumnHeaderFilter(12, TRUE, 1000);
    pList.IconFile = "listaiconosgif";
    
    pList.FieldSeparator = "|";
    
    FormatListColumnChar(1, 15, pList); //State
    FormatListColumnChar(2, 40, pList); //Customer
    FormatListColumnDate(3, 15, pList);  //Date

      
    FormatListColumnDate(4, 15, pList);  //Date

    FormatListColumnChar(5, 15, pList);  //Status

    
    FormatListColumnNumeric(6,10, 0, pList); //Número de la linea
    pList.SetColumnVisible(6, FALSE);
   
    FormatListColumnNumeric(7, 10,0, pList); //Cod item
    FormatListColumnChar(8, 15, pList);  //Descripcion item

    FormatListColumnNumeric(9, 15 ,0, pList); //Cantidad
    FormatListColumnNumeric(10, 15,0, pList); //Descuento
    FormatListColumnNumeric(11, 20, 2, pList); //Precio     
    pList.SetColumnMask(11,12);

    FormatListColumnChar(12, 20, pList); //Phone

    InstruSelect = "select customers.state, customers.company , order_date, pay_date , order_status , "+
                    " line_nbr, orderlines.item, items.description,  quantity, discount, price, phone " +
                    
                    " from orders, orderlines, items , customers"+
                        " where orders.order_nbr = orderlines.order_nbr and orderlines.item = items.item " +
                        " and orderlines.supplier = items.supplier and orders.customer = customers.customer order by line_nbr";

    

    if pType == "strings" then begin
        LoadString( pList, InstruSelect );
        pList.NumericColumnsFormattedToChar(true);
    end // if
    
    if pType == "sql" then begin
       gNumRows =  pList.LoadSelect(InstruSelect);
    end
End

Private LoadString(pList as SimpleFormControl, pInstruSelect as char)
Objects begin
    c as SqlCursor
    texto as Char
    customer line_nbr as integer 
    item  quantity discount as smallint
    order_date pay_date as date
    order_status   description phone as char
    price  as decimal (12,2)
    company state as char
    i as integer default 0
    j as integer default 0
    lChIndice as char
    InstruSelectString as char
end
begin

        c.Prepare(pInstruSelect);
    
        c.Open;
        
        While c.Fetch(state, company , order_date, pay_date , order_status , line_nbr, item, 
                    description,  quantity, discount, price, phone ).Found
        Do begin

            texto = state + "|" +company +"|"+ order_date.char +"|"+ pay_date.char +"|"+ order_status +"|"+ line_nbr.Using(2) +"|"+ 
                    item.Using(5) +"|"+ description +"|"+  quantity +"|"+ discount +"|"+ 
                price.Using(4) + "|" + phone;
 
            j = pList.AddString(texto ,0);                        
            ++i;
            pList.SetListInfo(j, j);
        end
        c.Close.Free;
 
end


Private FormatListColumnChar(pNumColumn as smallint, pLengthChar as smallint, pList as SimpleFormControl)
objects begin
end
Begin
    pList.SetColumnType(pNumColumn,0);
    pList.SetColumnAlign(pNumColumn,0);
    pList.SetColumnChars(pNumColumn,pLengthChar);
end

Private FormatListColumnNumeric(pNumColumn as smallint, pLengthColumns as smallint, pNumDec as smallint , pList as SimpleFormControl)
Objects begin
end
begin
    pList.SetColumnType(pNumColumn ,1); //Numeric
    if pNumDec > 0 then pList.SetColumnNumDec(pNumColumn, pNumDec); //DEcimales
    pList.SetColumnAlign(pNumColumn,2);//Izda
    pList.SetColumnChars(pNumColumn,pLengthColumns);
end

Private FormatListColumnDate(pNumColumn as smallint, pLengthColumns as smallint, pList as SimpleFormControl)
Objects begin
end
begin
    pList.SetColumnType(pNumColumn ,2); //Date
    pList.SetColumnAlign(pNumColumn,2);//Dcha
    pList.SetColumnChars(pNumColumn,pLengthColumns);

end



{************** Filtros con AddColumnFilter *******************************}

On event RClick control lstStrings(e as event)
objects begin
    obj1 as integer
end
begin
    MnuFiltro.Track(Self);
end

On Command FilterByColumn
objects begin
    col as integer
end
begin
    col = lstStrings.GetCurrentItem();
    lstStrings.AddColumnFilter(col,"=",lstStrings.GetListColumnText(lstStrings.Selected ,col),TRUE);
    lstStrings.Selected = 1;
end

On event Click control btnResetFiltro_2(e as event)
objects begin
    i numColumns as integer
end
begin
    lstStrings.ResetFilters();
//    numColumns = 12;
//    for i = 1 to 12 do begin
//        lstStrings.ResetColumnFilter(i);
//    end
end


{**************Barra de Filtros*******************************}

On Command  CmdFiltroStrings
begin
    lstStrings.ShowListFilterBar(TRUE, Rgb(205,205,205), Rgb(0,0,0), FALSE);
end

On Command CmdCerrarFiltroStrings
begin
    lstStrings.ShowListFilterBar(FALSE, NULL, NULL);
end

On Command CmdResefilterStrings
begin
    lstStrings.ResetListFilterBar();
    lstStrings.Selected = 1;
end

On Command CmdGetFilterBarStrings
begin
    lstStrings.GetStrListFilterBar();
end


On Command CmdGetStrListFilterBarStrings
begin
    lstStrings.GetStrListFilterBar();
end



{*******************Eventos*****************************}

On event ListCancelEditFilterBar (e as event)
begin
   
    ShowMessage("ESC key pressed. No filter will be applied");
end
On event ListAcceptEditFilterBar (e as event) 
begin
    ShowMessage("Filter by text: "+ e.GetControl().GetStrListFilterBar());
    lstStrings.Selected = 1;
end

On event ListCancelEditColumnFilter (e as event)
begin   
    ShowMessage("ESC key pressed. No filter will be applied for column: "+e.GetControl().GetCurrentItem());
end
On event ListAcceptEditColumnFilter (e as event)
begin
    ShowMessage("Filter for column: " + e.GetControl().GetCurrentItem());
    lstStrings.Selected = 1;
end

On Command CmdSetvalue
begin
    lstStrings.SetStrListFilterBar("tools");
end


On event Click control BtnFilterY(e as event)
begin
    lstStrings.AddColumnFilter(5, "=", "Y" );
end


{**********End filters************}

private Function ShowMessage(msg as char)
begin
    txtMensaje.Text = msg;
    Yield;
end


//{{CODEEND
END
CODE BEGIN
//{{CODEBEGIN
main
objects
begin
      of as frm
      i dafaultRGB as integer
end
begin
    PutEnv("DRAWLISTLINES", "TRUE");

   PutEnv("DBPATH", ProjectDir());
    Sql.Connect("stock");
 
    of.Run();
    Sql.Disconnect();
end
//{{CODEEND
END

