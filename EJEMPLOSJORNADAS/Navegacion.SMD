REPOSITORY stock
CONSTANTS  begin
end
CLASSES BEGIN
	frm is Form begin
		objects begin
			InstruSelect as Char
			bEditarCeldasConControles as Boolean default TRUE
		end
		INTERFACE
			POSITION 0 0 1297 463
			LABEL "Lists Navigation"
			RESIZING
			MAXIMIZE
			MINIMIZE
			SYSMENU
		BEGIN
			CONTROL ctr_caja AS BOX
				POSITION 0 0 1281 424
				FOREGROUND RGB 0 0 0
				BACKGROUND COLOR white
				ATTACH ALL
				NOLABEL
				NOBORDER
			BEGIN
				CONTROL lstStrings AS LIST
					POSITION 13 17 1256 395
					ATTACH ALL
					LABEL "State|Customer  |Order date |Pay date |Status |Nº line |Cod. Item |Description|Quantity|Discount|Price"
					BORDER DOUBLE DOWN
					ICON FILE "_MBSTDBMP_"
					LISTTYPE LISTCOLS 11
					SELECTTYPE SIMPLE
					SCROLL VERTICAL
			END
		END
	end
END
CODE CLASS frm BEGIN
//{{CODEBEGIN
On Open begin
    CargaLista(lstStrings, "strings");
    lstStrings.SetListSpreadSheetNavigation(true);
    lstStrings.Selected = 1;
   
end  
Private CargaLista ( pList as SimpleFormControl, pType as char)
    Objects Begin
       
        icon as integer default 0
        texto as char
        valor as decimal
        InstruSelectString as char
    End
Begin
    pList.Reset();    
    pList.AlternateBackColor( Rgb(207, 247, 254) , Rgb(254, 247, 224), 2);
    pList.IconFile = "listaiconosgif";
    
    pList.FieldSeparator = "|";
    
    FormatListColumnChar(1, 15, pList); //State
    FormatListColumnChar(2, 40, pList); //Customer
    FormatListColumnDate(3, 15, pList);  //Date

      
    FormatListColumnDate(4, 15, pList);  //Date

    FormatListColumnChar(5, 15, pList);  //Status
    FormatListColumnNumeric(6,10, 0, pList); //Número de la linea
    pList.SetColumnVisible(6, FALSE);
   
    FormatListColumnNumeric(7, 10,0, pList); //Cod item
    FormatListColumnChar(8, 15, pList);  //Descripcion item

    FormatListColumnNumeric(9, 15 ,0, pList); //Cantidad
    FormatListColumnNumeric(10, 15,0, pList); //Descuento
    FormatListColumnNumeric(11, 20, 2, pList); //Precio     
    pList.SetColumnMask(11,12);


    InstruSelect = "select customers.state, customers.company , order_date, pay_date , order_status , "+
                    " line_nbr, orderlines.item, items.description,  quantity, discount, price " +
                    
                    " from orders, orderlines, items , customers"+
                        " where orders.order_nbr = orderlines.order_nbr and orderlines.item = items.item " +
                        " and orderlines.supplier = items.supplier and orders.customer = customers.customer order by line_nbr";

    

    if pType == "strings" then begin
        LoadString( pList, InstruSelect );
        pList.NumericColumnsFormattedToChar(true);
    end // if
    
    if pType == "sql" then begin
        pList.LoadSelect(InstruSelect);
    end
    
End

Private LoadString(pList as SimpleFormControl, pInstruSelect as char)
Objects begin
    c as SqlCursor
    texto as Char
    customer line_nbr as integer 
    item  quantity discount as smallint
    order_date pay_date as date
    order_status   description as char
    price price2 price3 as decimal (12,2)
    company state as char
    i as integer default 0
    j as integer default 0
    lChIndice as char
    InstruSelectString as char
end
begin

        c.Prepare(pInstruSelect);
    
        c.Open;
        
        While c.Fetch(state, company , order_date, pay_date , order_status , line_nbr, item, 
                    description,  quantity, discount, price ).Found
        Do begin

            texto = state + "|" +company +"|"+ order_date.char +"|"+ pay_date.char +"|"+ order_status +"|"+ line_nbr.Using(2) +"|"+ 
                    item.Using(5) +"|"+ description +"|"+  quantity +"|"+ discount +"|"+ 
                price.Using(12) ;
 
            j = pList.AddString(texto ,1);                        
            ++i;
            pList.SetListInfo(j, j);
        end
        c.Close.Free;
 
end


Private FormatListColumnChar(pNumColumn as smallint, pLengthChar as smallint, pList as SimpleFormControl)
objects begin
end
Begin
    pList.SetColumnType(pNumColumn,0);
    pList.SetColumnAlign(pNumColumn,0);
    pList.SetColumnChars(pNumColumn,pLengthChar);
end

Private FormatListColumnNumeric(pNumColumn as smallint, pLengthColumns as smallint, pNumDec as smallint , pList as SimpleFormControl)
Objects begin
end
begin
    pList.SetColumnType(pNumColumn ,1); //Numeric
    if pNumDec > 0 then pList.SetColumnNumDec(pNumColumn, pNumDec); //DEcimales
    pList.SetColumnAlign(pNumColumn,2);//Izda
    pList.SetColumnChars(pNumColumn,pLengthColumns);
end

Private FormatListColumnDate(pNumColumn as smallint, pLengthColumns as smallint, pList as SimpleFormControl)
Objects begin
end
begin
    pList.SetColumnType(pNumColumn ,2); // Date
    pList.SetColumnAlign(pNumColumn,2); // Right
    pList.SetColumnChars(pNumColumn,pLengthColumns);

end
    

On event DblClick control lstStrings(e as event)
begin
    SendCommand("EditaList");
end

On Command EditaList
begin
    lstStrings.EditListColumn(lstStrings.Selected, lstStrings.GetCurrentItem());           
end
//{{CODEEND
END
CODE BEGIN
//{{CODEBEGIN
main
objects
begin
    ofrm as frm
end
begin
    PutEnv("DBPATH", ProjectDir());
    Sql.Connect("stock");
    ofrm.Run();
    Sql.Disconnect();
end
//{{CODEEND
END

